INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:root:Error: too many values to unpack (expected 2)
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:root:Error: too many values to unpack (expected 2)
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:root:Error: too many values to unpack (expected 2)
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:root:Error: too many values to unpack (expected 2)
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:root:Error: too many values to unpack (expected 2)
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:root:Error: too many values to unpack (expected 2)
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x102f1a9b0>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x102f1a9b0>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_closed of <amqp_server.amqp_server.AmqpServer object at 0x102f1a9b0>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.connection:New Connection state: INIT (prev=CLOSED)
DEBUG:pika.adapters.utils.connection_workflow:Starting AMQP Connection workflow asynchronously.
DEBUG:pika.adapters.utils.connection_workflow:Beginning a new AMQP connection workflow cycle; attempts remaining after this: 0
DEBUG:pika.adapters.utils.connection_workflow:_try_next_config_async: 'localhost':5672
DEBUG:pika.adapters.utils.connection_workflow:getaddrinfo returned 2 records
DEBUG:pika.adapters.utils.connection_workflow:Attempting to connect using address record (<AddressFamily.AF_INET6: 30>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('::1', 5672, 0, 0))
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('::1', 5672, 0, 0)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Connection-establishment is in progress for <socket.socket fd=9, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('::1', 58010, 0, 0)>.
ERROR:pika.adapters.utils.io_services_utils:Socket failed to connect: <socket.socket fd=9, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('::1', 58010, 0, 0)>; error=61 (Connection refused)
DEBUG:pika.adapters.utils.io_services_utils:_AsyncSocketConnector._report_completion(ConnectionRefusedError(61, 'Connection refused')); <socket.socket fd=9, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('::1', 58010, 0, 0)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
ERROR:pika.adapters.utils.connection_workflow:TCP Connection attempt failed: ConnectionRefusedError(61, 'Connection refused'); dest=(<AddressFamily.AF_INET6: 30>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('::1', 5672, 0, 0))
ERROR:pika.adapters.utils.connection_workflow:AMQPConnector - reporting failure: AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:Connection attempt completed with AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:Attempting to connect using address record (<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('127.0.0.1', 5672))
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('127.0.0.1', 5672)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Connection-establishment is in progress for <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 58011)>.
ERROR:pika.adapters.utils.io_services_utils:Socket failed to connect: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 58011)>; error=61 (Connection refused)
DEBUG:pika.adapters.utils.io_services_utils:_AsyncSocketConnector._report_completion(ConnectionRefusedError(61, 'Connection refused')); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 58011)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
ERROR:pika.adapters.utils.connection_workflow:TCP Connection attempt failed: ConnectionRefusedError(61, 'Connection refused'); dest=(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('127.0.0.1', 5672))
ERROR:pika.adapters.utils.connection_workflow:AMQPConnector - reporting failure: AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:Connection attempt completed with AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:_try_next_resolved_address: continuing with next config.
DEBUG:pika.adapters.utils.connection_workflow:_try_next_config_async: starting a new cycle.
ERROR:pika.adapters.utils.connection_workflow:AMQP connection workflow failed: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused').
ERROR:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting failure: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.base_connection:Full-stack connection workflow completed: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
ERROR:pika.adapters.base_connection:Full-stack connection workflow failed: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
ERROR:pika.adapters.base_connection:Self-initiated stack bring-up failed: AMQPConnectionError: (AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'),)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=AMQPConnectionError: (AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'),); pending-error=None
DEBUG:pika.connection:New Connection state: CLOSED (prev=INIT)
INFO:pika.connection:Connection setup terminated due to AMQPConnectionError: (AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'),)
DEBUG:pika.callback:Processing 0:_on_connection_error
DEBUG:pika.callback:Calling <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x102f1a9b0>> for "0:_on_connection_error"
INFO:amqp_server.amqp_server:Connection open failed, reconnect
INFO:amqp_server.amqp_server:Restarting server
INFO:amqp_server.amqp_server:Closing connection
ERROR:pika.connection:Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.
ERROR:pika.callback:Calling <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x102f1a9b0>> for "0:_on_connection_error" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 815, in _try_next_resolved_address
    addr_record = next(self._addrinfo_iter)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 124, in close_connection
    self.connection.close()
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1280, in close
    raise exceptions.ConnectionWrongStateError(msg)
pika.exceptions.ConnectionWrongStateError: Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 93, in on_connection_open_error
    self.restart()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 67, in restart
    self.close_connection()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 127, in close_connection
    LOGGER.warnning('Connection close failed')
AttributeError: 'Logger' object has no attribute 'warnning'
ERROR:pika.adapters.utils.io_services_utils:Wrapped func exited with exception. Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 815, in _try_next_resolved_address
    addr_record = next(self._addrinfo_iter)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 124, in close_connection
    self.connection.close()
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1280, in close
    raise exceptions.ConnectionWrongStateError(msg)
pika.exceptions.ConnectionWrongStateError: Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 286, in _report_completion
    self._on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 378, in _on_tcp_connection_done
    AMQPConnectorSocketConnectError(exc))
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 298, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 863, in _on_connector_done
    self._try_next_resolved_address()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 819, in _try_next_resolved_address
    self._try_next_config_async()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 774, in _try_next_config_async
    self._start_new_cycle_async(first=False)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 747, in _start_new_cycle_async
    self._report_completion_and_cleanup(error)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 730, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 263, in _unshim_connection_workflow_callback
    user_on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 337, in _on_connection_workflow_done
    self._handle_connection_workflow_failure(conn_or_exc)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 360, in _handle_connection_workflow_failure
    self._on_stream_terminated(error)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2059, in _on_stream_terminated
    self._error)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 93, in on_connection_open_error
    self.restart()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 67, in restart
    self.close_connection()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 127, in close_connection
    LOGGER.warnning('Connection close failed')
AttributeError: 'Logger' object has no attribute 'warnning'
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 815, in _try_next_resolved_address
    addr_record = next(self._addrinfo_iter)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 124, in close_connection
    self.connection.close()
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1280, in close
    raise exceptions.ConnectionWrongStateError(msg)
pika.exceptions.ConnectionWrongStateError: Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 286, in _report_completion
    self._on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 378, in _on_tcp_connection_done
    AMQPConnectorSocketConnectError(exc))
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 298, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 863, in _on_connector_done
    self._try_next_resolved_address()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 819, in _try_next_resolved_address
    self._try_next_config_async()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 774, in _try_next_config_async
    self._start_new_cycle_async(first=False)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 747, in _start_new_cycle_async
    self._report_completion_and_cleanup(error)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 730, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 263, in _unshim_connection_workflow_callback
    user_on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 337, in _on_connection_workflow_done
    self._handle_connection_workflow_failure(conn_or_exc)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 360, in _handle_connection_workflow_failure
    self._on_stream_terminated(error)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2059, in _on_stream_terminated
    self._error)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 93, in on_connection_open_error
    self.restart()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 67, in restart
    self.close_connection()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 127, in close_connection
    LOGGER.warnning('Connection close failed')
AttributeError: 'Logger' object has no attribute 'warnning'
ERROR:pika.adapters.utils.io_services_utils:Wrapped func exited with exception. Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 815, in _try_next_resolved_address
    addr_record = next(self._addrinfo_iter)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 124, in close_connection
    self.connection.close()
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1280, in close
    raise exceptions.ConnectionWrongStateError(msg)
pika.exceptions.ConnectionWrongStateError: Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 353, in _on_writable
    self._report_completion(result)
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 286, in _report_completion
    self._on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 378, in _on_tcp_connection_done
    AMQPConnectorSocketConnectError(exc))
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 298, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 863, in _on_connector_done
    self._try_next_resolved_address()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 819, in _try_next_resolved_address
    self._try_next_config_async()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 774, in _try_next_config_async
    self._start_new_cycle_async(first=False)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 747, in _start_new_cycle_async
    self._report_completion_and_cleanup(error)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 730, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 263, in _unshim_connection_workflow_callback
    user_on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 337, in _on_connection_workflow_done
    self._handle_connection_workflow_failure(conn_or_exc)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 360, in _handle_connection_workflow_failure
    self._on_stream_terminated(error)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2059, in _on_stream_terminated
    self._error)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 93, in on_connection_open_error
    self.restart()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 67, in restart
    self.close_connection()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 127, in close_connection
    LOGGER.warnning('Connection close failed')
AttributeError: 'Logger' object has no attribute 'warnning'
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 815, in _try_next_resolved_address
    addr_record = next(self._addrinfo_iter)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 124, in close_connection
    self.connection.close()
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1280, in close
    raise exceptions.ConnectionWrongStateError(msg)
pika.exceptions.ConnectionWrongStateError: Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 353, in _on_writable
    self._report_completion(result)
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 286, in _report_completion
    self._on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 378, in _on_tcp_connection_done
    AMQPConnectorSocketConnectError(exc))
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 298, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 863, in _on_connector_done
    self._try_next_resolved_address()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 819, in _try_next_resolved_address
    self._try_next_config_async()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 774, in _try_next_config_async
    self._start_new_cycle_async(first=False)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 747, in _start_new_cycle_async
    self._report_completion_and_cleanup(error)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 730, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 263, in _unshim_connection_workflow_callback
    user_on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 337, in _on_connection_workflow_done
    self._handle_connection_workflow_failure(conn_or_exc)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 360, in _handle_connection_workflow_failure
    self._on_stream_terminated(error)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2059, in _on_stream_terminated
    self._error)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 93, in on_connection_open_error
    self.restart()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 67, in restart
    self.close_connection()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 127, in close_connection
    LOGGER.warnning('Connection close failed')
AttributeError: 'Logger' object has no attribute 'warnning'
ERROR:asyncio:Exception in callback None()
handle: <Handle cancelled>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 815, in _try_next_resolved_address
    addr_record = next(self._addrinfo_iter)
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 124, in close_connection
    self.connection.close()
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1280, in close
    raise exceptions.ConnectionWrongStateError(msg)
pika.exceptions.ConnectionWrongStateError: Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 353, in _on_writable
    self._report_completion(result)
  File "/usr/local/lib/python3.7/site-packages/pika/diagnostic_utils.py", line 53, in log_exception_func_wrap
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 286, in _report_completion
    self._on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 378, in _on_tcp_connection_done
    AMQPConnectorSocketConnectError(exc))
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 298, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 863, in _on_connector_done
    self._try_next_resolved_address()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 819, in _try_next_resolved_address
    self._try_next_config_async()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 774, in _try_next_config_async
    self._start_new_cycle_async(first=False)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 747, in _start_new_cycle_async
    self._report_completion_and_cleanup(error)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/connection_workflow.py", line 730, in _report_completion_and_cleanup
    on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 263, in _unshim_connection_workflow_callback
    user_on_done(result)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 337, in _on_connection_workflow_done
    self._handle_connection_workflow_failure(conn_or_exc)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 360, in _handle_connection_workflow_failure
    self._on_stream_terminated(error)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2059, in _on_stream_terminated
    self._error)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 93, in on_connection_open_error
    self.restart()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 67, in restart
    self.close_connection()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 127, in close_connection
    LOGGER.warnning('Connection close failed')
AttributeError: 'Logger' object has no attribute 'warnning'
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_closed of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.connection:New Connection state: INIT (prev=CLOSED)
DEBUG:pika.adapters.utils.connection_workflow:Starting AMQP Connection workflow asynchronously.
DEBUG:pika.adapters.utils.connection_workflow:Beginning a new AMQP connection workflow cycle; attempts remaining after this: 0
DEBUG:pika.adapters.utils.connection_workflow:_try_next_config_async: 'localhost':5672
DEBUG:pika.adapters.utils.connection_workflow:getaddrinfo returned 2 records
DEBUG:pika.adapters.utils.connection_workflow:Attempting to connect using address record (<AddressFamily.AF_INET6: 30>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('::1', 5672, 0, 0))
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('::1', 5672, 0, 0)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Connection-establishment is in progress for <socket.socket fd=9, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('::1', 58053, 0, 0)>.
ERROR:pika.adapters.utils.io_services_utils:Socket failed to connect: <socket.socket fd=9, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('::1', 58053, 0, 0)>; error=61 (Connection refused)
DEBUG:pika.adapters.utils.io_services_utils:_AsyncSocketConnector._report_completion(ConnectionRefusedError(61, 'Connection refused')); <socket.socket fd=9, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('::1', 58053, 0, 0)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
ERROR:pika.adapters.utils.connection_workflow:TCP Connection attempt failed: ConnectionRefusedError(61, 'Connection refused'); dest=(<AddressFamily.AF_INET6: 30>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('::1', 5672, 0, 0))
ERROR:pika.adapters.utils.connection_workflow:AMQPConnector - reporting failure: AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:Connection attempt completed with AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:Attempting to connect using address record (<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('127.0.0.1', 5672))
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('127.0.0.1', 5672)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Connection-establishment is in progress for <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 58054)>.
ERROR:pika.adapters.utils.io_services_utils:Socket failed to connect: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 58054)>; error=61 (Connection refused)
DEBUG:pika.adapters.utils.io_services_utils:_AsyncSocketConnector._report_completion(ConnectionRefusedError(61, 'Connection refused')); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 58054)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
ERROR:pika.adapters.utils.connection_workflow:TCP Connection attempt failed: ConnectionRefusedError(61, 'Connection refused'); dest=(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('127.0.0.1', 5672))
ERROR:pika.adapters.utils.connection_workflow:AMQPConnector - reporting failure: AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:Connection attempt completed with AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.utils.connection_workflow:_try_next_resolved_address: continuing with next config.
DEBUG:pika.adapters.utils.connection_workflow:_try_next_config_async: starting a new cycle.
ERROR:pika.adapters.utils.connection_workflow:AMQP connection workflow failed: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused').
ERROR:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting failure: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
DEBUG:pika.adapters.base_connection:Full-stack connection workflow completed: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
ERROR:pika.adapters.base_connection:Full-stack connection workflow failed: AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused')
ERROR:pika.adapters.base_connection:Self-initiated stack bring-up failed: AMQPConnectionError: (AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'),)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=AMQPConnectionError: (AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'),); pending-error=None
DEBUG:pika.connection:New Connection state: CLOSED (prev=INIT)
INFO:pika.connection:Connection setup terminated due to AMQPConnectionError: (AMQPConnectionWorkflowFailed: 2 exceptions in all; last exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'); first exception - AMQPConnectorSocketConnectError: ConnectionRefusedError(61, 'Connection refused'),)
DEBUG:pika.callback:Processing 0:_on_connection_error
DEBUG:pika.callback:Calling <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>> for "0:_on_connection_error"
INFO:amqp_server.amqp_server:Connection open failed, reconnect
INFO:amqp_server.amqp_server:Restarting server
INFO:amqp_server.amqp_server:Closing connection
ERROR:pika.connection:Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>> because it was called while connection state=CLOSED.
WARNING:amqp_server.amqp_server:Connection close failed
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_closed of <amqp_server.amqp_server.AmqpServer object at 0x10f07a978>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.connection:New Connection state: INIT (prev=CLOSED)
DEBUG:pika.adapters.utils.connection_workflow:Starting AMQP Connection workflow asynchronously.
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server restarted
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Incremented callback reference counter: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 2}
DEBUG:pika.callback:Incremented callback reference counter: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<URLParameters host=localhost port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 2}
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '\nERROR: Action exchange not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '\nERROR: Action queue not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '\nERROR: Action binding not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action binding not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action binding not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating queues
INFO:root:declare queue (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating queues
INFO:root:declare queue (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating queues
INFO:root:declare queue (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating queues
INFO:root:declare queue (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:declare binding (1, 'Traceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 580, in http\n    conn.request(method, path, body, headers)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1229, in request\n    self._send_request(method, url, body, headers, encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1275, in _send_request\n    self.endheaders(body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1224, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1016, in _send_output\n    self.send(msg)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 956, in send\n    self.connect()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 928, in connect\n    (self.host,self.port), self.timeout, self.source_address)\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 707, in create_connection\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py", line 748, in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nsocket.gaierror: [Errno 8] nodename nor servname provided, or not known\n*** Could not connect: [Errno 8] nodename nor servname provided, or not known\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H rabbitmq 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:declare binding (1, '\nERROR: Action \xa0declare not understood\n\nrabbitmqadmin --help for help\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H 192.168.1.14 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H localhost 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H localhost 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:Creating exchanges
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:Creating exchanges
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:Creating exchanges
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating exchanges
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating exchanges
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
INFO:root:declare exchange (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating queues
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare queue name=rpc_queue auto_delete=false durable=false
INFO:root:declare queue (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Creating bindings
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo
INFO:root:declare binding (1, '*** Could not connect: [Errno 61] Connection refused\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
INFO:root:declare exchange (1, '*** Access refused: /api/exchanges/%2F/rpc_exchange\n')
INFO:root:Creating queues
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare queue name=rpc_queue auto_delete=false durable=false
INFO:root:declare queue (1, '*** Access refused: /api/queues/%2F/rpc_queue\n')
INFO:root:Creating bindings
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/rpc_exchange/q/rpc_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin -H mbroker 
INFO:root:Creating exchanges
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
INFO:root:declare exchange (1, '*** Access refused: /api/exchanges/%2F/rpc_exchange\n')
INFO:root:Creating queues
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare queue name=rpc_queue auto_delete=false durable=false
INFO:root:declare queue (1, '*** Access refused: /api/queues/%2F/rpc_queue\n')
INFO:root:Creating bindings
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/rpc_exchange/q/rpc_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin -H mbroker declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin  
INFO:root:Creating exchanges
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
INFO:root:declare exchange (1, '*** Access refused: /api/exchanges/%2F/rpc_exchange\n')
INFO:root:Creating queues
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare queue name=rpc_queue auto_delete=false durable=false
INFO:root:declare queue (1, '*** Access refused: /api/queues/%2F/rpc_queue\n')
INFO:root:Creating bindings
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/rpc_exchange/q/rpc_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin  
INFO:root:Creating exchanges
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
INFO:root:declare exchange (1, '*** Access refused: /api/exchanges/%2F/rpc_exchange\n')
INFO:root:Creating queues
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare queue name=rpc_queue auto_delete=false durable=false
INFO:root:declare queue (1, '*** Access refused: /api/queues/%2F/rpc_queue\n')
INFO:root:Creating bindings
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/rpc_exchange/q/rpc_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:RABBITMQ ADMIN COMMAND ./bin/rabbitmqadmin  declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo
INFO:root:declare binding (1, '*** Access refused: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
ERROR:root:Error: local variable 'res' referenced before assignment
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F declare exchange name=rpc_exchange type=topic auto_delete=False durable=False internal=False): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F declare queue name=rpc_queue auto_delete=False durable=False): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost / declare exchange name=rpc_exchange type=topic auto_delete=False durable=False internal=False): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost / declare queue name=rpc_queue auto_delete=False durable=False): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost '/' declare exchange name=rpc_exchange type=topic auto_delete=False durable=False internal=False): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost '/' declare queue name=rpc_queue auto_delete=False durable=False): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost '/' declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost '/' declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:declare queue binding: rabbitmqadmin(-U amqp://admin:admin@mbroker:5672/%2F --vhost '/' declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (1, 'WARNING: path in --base-uri is ignored. Please specify --vhost and/or --path-prefix separately.\n\n*** Error getting HTTP response:\n\nTraceback (most recent call last):\n  File "./bin/rabbitmqadmin", line 587, in http\n    resp = conn.getresponse()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 1321, in getresponse\n    response.begin()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 296, in begin\n    version, status, reason = self._read_status()\n  File "/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py", line 278, in _read_status\n    raise BadStatusLine(line)\nhttp.client.BadStatusLine: AMQP\x00\x00\t\x01\n\n')
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10dcfd470>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x10dcfd470>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_closed of <amqp_server.amqp_server.AmqpServer object at 0x10dcfd470>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.connection:New Connection state: INIT (prev=CLOSED)
DEBUG:pika.adapters.utils.connection_workflow:Starting AMQP Connection workflow asynchronously.
DEBUG:pika.adapters.utils.connection_workflow:Beginning a new AMQP connection workflow cycle; attempts remaining after this: 0
DEBUG:pika.adapters.utils.connection_workflow:_try_next_config_async: 'mbroker':5672
DEBUG:pika.adapters.utils.connection_workflow:getaddrinfo returned 1 records
DEBUG:pika.adapters.utils.connection_workflow:Attempting to connect using address record (<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('192.168.1.14', 5672))
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Connection-establishment is in progress for <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>.
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncSocketConnector._report_completion(None); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.connection_workflow:TCP connection to broker established: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>.
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector.start(); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._start_async(); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._linkup()
DEBUG:pika.adapters.utils.io_services_utils:_AsyncTransportBase.__init__: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:set_reader(9, _)
DEBUG:pika.adapters.utils.io_services_utils:_linkup(): created transport <pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710>
DEBUG:pika.connection:New Connection state: PROTOCOL (prev=INIT)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_linkup(): introduced transport to protocol <pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710>; _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._report_completion((<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>)); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
DEBUG:pika.callback:Added: {'callback': <bound method AMQPConnector._on_amqp_handshake_done of <pika.adapters.utils.connection_workflow.AMQPConnector object at 0x10e3d4f98>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AMQPConnector._on_amqp_handshake_done of <pika.adapters.utils.connection_workflow.AMQPConnector object at 0x10e3d4f98>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._cleanup(False)
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 0:Connection.Start
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_connection_start of <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>> for "0:Connection.Start"
DEBUG:pika.connection:New Connection state: START (prev=PROTOCOL)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_tune of <AsyncioConnection START transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 0:Connection.Tune
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_connection_tune of <AsyncioConnection START transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_connection_tune of <AsyncioConnection START transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>> for "0:Connection.Tune"
DEBUG:pika.connection:New Connection state: TUNE (prev=START)
DEBUG:pika.connection:Creating a HeartbeatChecker: 60
DEBUG:pika.heartbeat:timeout: 60.000000 send_interval: 30.000000 check_interval: 65.000000
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_open_ok of <AsyncioConnection TUNE transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 0:Connection.OpenOk
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_connection_open_ok of <AsyncioConnection TUNE transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_connection_open_ok of <AsyncioConnection TUNE transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>> for "0:Connection.OpenOk"
DEBUG:pika.connection:New Connection state: OPEN (prev=TUNE)
DEBUG:pika.callback:Processing 0:_on_connection_open_ok
DEBUG:pika.callback:Calling <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x10dcfd470>> for "0:_on_connection_open_ok"
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
DEBUG:pika.connection:Creating channel 1
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_channel_cleanup of <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': <Channel number=1 CLOSED conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_getempty of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_cancel of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_flow of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_close_from_broker of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.channel:Entering blocking state on frame <Channel.Open(['out_of_band='])>; acceptable_replies=[<class 'pika.spec.Channel.OpenOk'>]
DEBUG:pika.channel:Adding on_synchronous_complete callback
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_synchronous_complete of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.channel:Adding passed-in RPC response callback
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_openok of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Calling <bound method AMQPConnector._on_amqp_handshake_done of <pika.adapters.utils.connection_workflow.AMQPConnector object at 0x10e3d4f98>> for "0:_on_connection_open_ok"
DEBUG:pika.adapters.utils.connection_workflow:AMQPConnector: AMQP handshake attempt completed; state=3; error=None; 'mbroker'/(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('192.168.1.14', 5672))
DEBUG:pika.adapters.utils.connection_workflow:AMQPConnector: AMQP connection established for 'mbroker'/(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('192.168.1.14', 5672)): <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
DEBUG:pika.adapters.utils.connection_workflow:Connection attempt completed with <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
DEBUG:pika.adapters.base_connection:Full-stack connection workflow completed: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 1:Channel.OpenOk
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Channel._on_synchronous_complete of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Channel._on_openok of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Channel._on_synchronous_complete of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk"
DEBUG:pika.channel:0 blocked frames
DEBUG:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPENING conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk"
INFO:amqp_server.amqp_server:Channel opened
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_channel_closed of <amqp_server.amqp_server.AmqpServer object at 0x10dcfd470>>, 'one_shot': False, 'only': <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'arguments': None}
INFO:amqp_server.amqp_server:Creating exchanges
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
DEBUG:pika.channel:Entering blocking state on frame <Basic.Qos(['global_qos=False', 'prefetch_count=1', 'prefetch_size=0'])>; acceptable_replies=[<class 'pika.spec.Basic.QosOk'>]
DEBUG:pika.channel:Adding on_synchronous_complete callback
DEBUG:pika.callback:Added: {'callback': <bound method Channel._on_synchronous_complete of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
DEBUG:pika.channel:Already in blocking state, so enqueueing method <Basic.Consume(['arguments={}', 'consumer_tag=ctag1.43386716a32e4bb9b8d2de08643668f9', 'exclusive=False', 'no_ack=False', 'no_local=False', 'nowait=False', 'queue=rpc_queue', 'ticket=0'])>; acceptable_replies=[(<class 'pika.spec.Basic.ConsumeOk'>, {'consumer_tag': 'ctag1.43386716a32e4bb9b8d2de08643668f9'})]
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
DEBUG:pika.channel:Already in blocking state, so enqueueing method <Basic.Consume(['arguments={}', 'consumer_tag=ctag1.683a62a1211c479f9b587e49c9c13d7a', 'exclusive=False', 'no_ack=False', 'no_local=False', 'nowait=False', 'queue=task_queue', 'ticket=0'])>; acceptable_replies=[(<class 'pika.spec.Basic.ConsumeOk'>, {'consumer_tag': 'ctag1.683a62a1211c479f9b587e49c9c13d7a'})]
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 1:Channel.Close
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Channel._on_close_from_broker of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Channel._on_close_from_broker of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.Close"
WARNING:pika.channel:Received remote Channel.Close (404): "NOT_FOUND - no exchange 'task_exchange' in vhost '/'" on <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 1:_on_channel_close
DEBUG:pika.callback:Calling <bound method AmqpServer.on_channel_closed of <amqp_server.amqp_server.AmqpServer object at 0x10dcfd470>> for "1:_on_channel_close"
INFO:amqp_server.amqp_server:Channel closed
DEBUG:pika.callback:Processing 1:_on_channel_cleanup
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_channel_cleanup of <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'one_shot': True, 'only': <Channel number=1 CLOSED conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_channel_cleanup of <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e3fd710> params=<URLParameters host=mbroker port=5672 virtual_host=/ ssl=False>>> for "1:_on_channel_cleanup"
DEBUG:pika.connection:Removed channel 1
DEBUG:pika.callback:Clearing out '1' from the stack
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Received heartbeat frame
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Received heartbeat frame
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Received 2 heartbeat frames, sent 2, idle intervals 0
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Received heartbeat frame
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.heartbeat:Sending heartbeat frame
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
DEBUG:pika.heartbeat:Received heartbeat frame
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 55603), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_closed of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.connection:New Connection state: INIT (prev=CLOSED)
DEBUG:pika.adapters.utils.connection_workflow:Starting AMQP Connection workflow asynchronously.
DEBUG:pika.adapters.utils.connection_workflow:Beginning a new AMQP connection workflow cycle; attempts remaining after this: 0
DEBUG:pika.adapters.utils.connection_workflow:_try_next_config_async: 'mbroker':5672
DEBUG:pika.adapters.utils.connection_workflow:getaddrinfo returned 1 records
DEBUG:pika.adapters.utils.connection_workflow:Attempting to connect using address record (<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('192.168.1.14', 5672))
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Connection-establishment is in progress for <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>.
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncSocketConnector._report_completion(None); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.connection_workflow:TCP connection to broker established: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>.
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector.start(); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._start_async(); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._linkup()
DEBUG:pika.adapters.utils.io_services_utils:_AsyncTransportBase.__init__: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:set_reader(9, _)
DEBUG:pika.adapters.utils.io_services_utils:_linkup(): created transport <pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828>
DEBUG:pika.connection:New Connection state: PROTOCOL (prev=INIT)
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:_linkup(): introduced transport to protocol <pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828>; _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._report_completion((<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>)); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>).
DEBUG:pika.callback:Added: {'callback': <bound method AMQPConnector._on_amqp_handshake_done of <pika.adapters.utils.connection_workflow.AMQPConnector object at 0x10c8e00f0>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AMQPConnector._on_amqp_handshake_done of <pika.adapters.utils.connection_workflow.AMQPConnector object at 0x10c8e00f0>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.adapters.utils.io_services_utils:_AsyncStreamConnector._cleanup(False)
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 0:Connection.Start
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_connection_start of <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>> for "0:Connection.Start"
DEBUG:pika.connection:New Connection state: START (prev=PROTOCOL)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_tune of <AsyncioConnection START transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 0:Connection.Tune
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_connection_tune of <AsyncioConnection START transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_connection_tune of <AsyncioConnection START transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>> for "0:Connection.Tune"
DEBUG:pika.connection:New Connection state: TUNE (prev=START)
DEBUG:pika.connection:Creating a HeartbeatChecker: 60
DEBUG:pika.heartbeat:timeout: 60.000000 send_interval: 30.000000 check_interval: 65.000000
DEBUG:pika.adapters.asyncio_connection:set_writer(9, _)
DEBUG:pika.adapters.utils.io_services_utils:Turned on writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_open_ok of <AsyncioConnection TUNE transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.adapters.utils.io_services_utils:Recv would block on <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Turned off writability watcher: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.callback:Processing 0:Connection.Close
DEBUG:pika.callback:Processing use of oneshot callback
DEBUG:pika.callback:0 registered uses left
DEBUG:pika.callback:Removing callback #0: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection TUNE transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 0}
DEBUG:pika.callback:Calling <bound method Connection._on_connection_close_from_broker of <AsyncioConnection TUNE transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c8e9828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>> for "0:Connection.Close"
DEBUG:pika.connection:_on_connection_close_from_broker: frame=<METHOD(['channel_number=0', 'frame_type=1', "method=<Connection.Close(['class_id=10', 'method_id=40', 'reply_code=530', 'reply_text=NOT_ALLOWED - vhost /%2F not found'])>"])>
DEBUG:pika.heartbeat:Removing timer for next heartbeat send interval
DEBUG:pika.heartbeat:Removing timer for next heartbeat check interval
INFO:pika.adapters.utils.io_services_utils:Aborting transport connection: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.asyncio_connection:remove_reader(9)
DEBUG:pika.adapters.asyncio_connection:remove_writer(9)
DEBUG:pika.adapters.utils.io_services_utils:Leaving Plaintext consumer due to inactive state: state=3; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
DEBUG:pika.adapters.utils.io_services_utils:Concluding transport shutdown: state=3; error=None
DEBUG:pika.adapters.base_connection:connection_lost: None
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=None; pending-error=ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
DEBUG:pika.connection:New Connection state: CLOSED (prev=TUNE)
INFO:pika.connection:Connection setup terminated due to ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
DEBUG:pika.callback:Processing 0:_on_connection_error
DEBUG:pika.callback:Calling <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>> for "0:_on_connection_error"
INFO:amqp_server.amqp_server:Connection open failed, reconnect
INFO:amqp_server.amqp_server:Restarting server
INFO:amqp_server.amqp_server:Closing connection
ERROR:pika.connection:Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>> because it was called while connection state=CLOSED.
WARNING:amqp_server.amqp_server:Connection close failed
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_open_error of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_opened of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.callback:Added: {'callback': <bound method AmqpServer.on_connection_closed of <amqp_server.amqp_server.AmqpServer object at 0x10c1f23c8>>, 'one_shot': False, 'only': None, 'arguments': None}
DEBUG:pika.connection:New Connection state: INIT (prev=CLOSED)
DEBUG:pika.adapters.utils.connection_workflow:Starting AMQP Connection workflow asynchronously.
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server restarted
DEBUG:pika.callback:Calling <bound method AMQPConnector._on_amqp_handshake_done of <pika.adapters.utils.connection_workflow.AMQPConnector object at 0x10c8e00f0>> for "0:_on_connection_error"
DEBUG:pika.adapters.utils.connection_workflow:AMQPConnector: AMQP handshake attempt completed; state=3; error=ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; 'mbroker'/(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('192.168.1.14', 5672))
DEBUG:pika.adapters.utils.connection_workflow:AMQPConnector: AMQP connection handshake failed for 'mbroker'/(<AddressFamily.AF_INET: 2>, <SocketKind.SOCK_STREAM: 1>, 6, '', ('192.168.1.14', 5672)): ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
ERROR:pika.adapters.utils.connection_workflow:AMQPConnector - reporting failure: AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
DEBUG:pika.adapters.utils.connection_workflow:Connection attempt completed with AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
DEBUG:pika.adapters.utils.connection_workflow:Ending AMQP connection workflow after first failed AMQP handshake due to _until_first_amqp_attempt.
ERROR:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting failure: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
DEBUG:pika.adapters.base_connection:Full-stack connection workflow completed: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
ERROR:pika.adapters.base_connection:Full-stack connection workflow failed: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
ERROR:pika.adapters.base_connection:Self-initiated stack bring-up failed: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
DEBUG:pika.adapters.base_connection:_handle_connection_workflow_failure(): suppressing - connection already closed.
DEBUG:pika.connection:New Connection state: CLOSED (prev=CLOSED)
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_start of <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
DEBUG:pika.callback:Added: {'callback': <bound method Connection._on_connection_close_from_broker of <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>>, 'one_shot': True, 'only': None, 'arguments': None, 'calls': 1}
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=3; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56884), raddr=('192.168.1.14', 5672)>
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56952), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x11073f780>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x11073f780> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>>).
INFO:pika.adapters.utils.io_services_utils:Aborting transport connection: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56952), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=None; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56952), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56952), raddr=('192.168.1.14', 5672)>
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=None; pending-error=ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
INFO:pika.connection:Connection setup terminated due to ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
INFO:amqp_server.amqp_server:Connection open failed, reconnect
INFO:amqp_server.amqp_server:Restarting server
INFO:amqp_server.amqp_server:Closing connection
ERROR:pika.connection:Illegal close(200, 'Normal shutdown') request on <AsyncioConnection CLOSED transport=None params=<ConnectionParameters host=mbroker port=5672 virtual_host=/%2F ssl=False>> because it was called while connection state=CLOSED.
WARNING:amqp_server.amqp_server:Connection close failed
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server restarted
ERROR:pika.adapters.utils.connection_workflow:AMQPConnector - reporting failure: AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'
ERROR:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting failure: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
ERROR:pika.adapters.base_connection:Full-stack connection workflow failed: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
ERROR:pika.adapters.base_connection:Self-initiated stack bring-up failed: AMQPConnectionWorkflowFailed: 1 exceptions in all; last exception - AMQPConnectorAMQPHandshakeError: ConnectionClosedByBroker: (530) 'NOT_ALLOWED - vhost /%2F not found'; first exception - None
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=3; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56952), raddr=('192.168.1.14', 5672)>
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 56972), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fe63748>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fe63748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fe63748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fe63748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
WARNING:pika.channel:Received remote Channel.Close (404): "NOT_FOUND - no exchange 'task_exchange' in vhost '/'" on <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fe63748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>
INFO:amqp_server.amqp_server:Channel closed
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-H mbroker -u admin -p admin --vhost / declare exchange name=rpc_exchange type=topic auto_delete=False durable=False internal=False): (1, "*** ['not_boolean', 'False']\n")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-H mbroker -u admin -p admin --vhost / declare queue name=rpc_queue auto_delete=False durable=False): (1, "*** ['not_boolean', 'False']\n")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-H mbroker -u admin -p admin --vhost / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (0, 'binding declared')
INFO:root:declare queue binding: rabbitmqadmin(-H mbroker -u admin -p admin --vhost / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (1, '*** Not found: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:declare queue binding: rabbitmqadmin(-H mbroker -u admin -p admin --vhost / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (1, '*** Not found: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-h mbroker -u admin -p admin --vhost / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-h mbroker -u admin -p admin --vhost / declare queue name=rpc_queue auto_delete=false durable=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin --vhost / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin --vhost / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin --vhost / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin(-h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo): (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin -h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin -h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin -h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin -h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin -h mbroker -u admin -p admin -v / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin -h mbroker -u admin -p admin -v / declare queue name=rpc_queue auto_delete=false durable=false: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:declare queue binding: rabbitmqadmin -h mbroker -u admin -p admin -v / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo: (0, "Usage\n=====\n  rabbitmqadmin [options] subcommand\n\nOptions\n=======\n--help, -h              show this help message and exit\n--config=CONFIG, -c CONFIG\n                        configuration file [default: ~/.rabbitmqadmin.conf]\n--node=NODE, -N NODE    node described in the configuration file [default:\n                        'default' only if configuration file is specified]\n--host=HOST, -H HOST    connect to host HOST [default: localhost]\n--port=PORT, -P PORT    connect to port PORT [default: 15672]\n--path-prefix=PATH_PREFIX\n                        use specific URI path prefix for the RabbitMQ HTTP\n                        API. /api and operation path will be appended to it.\n                        (default: blank string) [default: ]\n--vhost=VHOST, -V VHOST\n                        connect to vhost VHOST [default: all vhosts for list,\n                        '/' for declare]\n--username=USERNAME, -u USERNAME\n                        connect using username USERNAME [default: guest]\n--password=PASSWORD, -p PASSWORD\n                        connect using password PASSWORD [default: guest]\n--base-uri=URI, -U URI  connect using a base HTTP API URI. /api and operation\n                        path will be appended to it. Path will be ignored.\n                        --vhost has to be provided separately.\n--quiet, -q             suppress status messages [default: True]\n--ssl, -s               connect with ssl [default: False]\n--ssl-key-file=SSL_KEY_FILE\n                        PEM format key file for SSL\n--ssl-cert-file=SSL_CERT_FILE\n                        PEM format certificate file for SSL\n--ssl-ca-cert-file=SSL_CA_CERT_FILE\n                        PEM format CA certificate file for SSL\n--ssl-disable-hostname-verification\n                        Disables peer hostname verification\n--ssl-insecure, -k      Disables all SSL validations like curl's '-k' argument\n--request-timeout=REQUEST_TIMEOUT, -t REQUEST_TIMEOUT\n                        HTTP request timeout in seconds [default: 120]\n--format=FORMAT, -f FORMAT\n                        format for listing commands - one of [raw_json,\n                        pretty_json, tsv, long, table, kvp, bash] [default:\n                        table]\n--sort=SORT, -S SORT    sort key for listing queries\n--sort-reverse, -R      reverse the sort order\n--depth=DEPTH, -d DEPTH\n                        maximum depth to recurse for listing tables [default:\n                        1]\n--bash-completion       Print bash completion script [default: False]\n--version               Display version and exit\n\nMore Help\n=========\n\nFor more help use the help subcommand:\n\n  rabbitmqadmin help subcommands  # For a list of available subcommands\n  rabbitmqadmin help config       # For help with the configuration file")
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:declare exchange: rabbitmqadmin -H mbroker -u admin -p admin -V / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false: (0, 'exchange declared')
INFO:root:Creating queues
INFO:root:declare queue: rabbitmqadmin -H mbroker -u admin -p admin -V / declare queue name=rpc_queue auto_delete=false durable=false: (0, 'queue declared')
INFO:root:Creating bindings
INFO:root:declare queue binding: rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc: (0, 'binding declared')
INFO:root:declare queue binding: rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task: (1, '*** Not found: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:declare queue binding: rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo: (1, '*** Not found: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:## declare exchange
rabbitmqadmin -H mbroker -u admin -p admin -V / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
(0, 'exchange declared')

INFO:root:Creating queues
INFO:root:## declare queue:
rabbitmqadmin -H mbroker -u admin -p admin -V / declare queue name=rpc_queue auto_delete=false durable=false
(0, 'queue declared')
INFO:root:Creating bindings
INFO:root:## declare queue binding
rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
(0, 'binding declared')
INFO:root:## declare queue binding
rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
(1, '*** Not found: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:## declare queue binding
rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task.echo
(1, '*** Not found: /api/bindings/%2F/e/task_exchange/q/task_queue\n')
INFO:root:Bye!
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:root:RabbitMQ admin: ./bin/rabbitmqadmin 
INFO:root:Creating exchanges
INFO:root:## declare exchange
rabbitmqadmin -H mbroker -u admin -p admin -V / declare exchange name=task_exchange type=topic auto_delete=false durable=false internal=false
(0, 'exchange declared')

INFO:root:## declare exchange
rabbitmqadmin -H mbroker -u admin -p admin -V / declare exchange name=rpc_exchange type=topic auto_delete=false durable=false internal=false
(0, 'exchange declared')

INFO:root:Creating queues
INFO:root:## declare queue:
rabbitmqadmin -H mbroker -u admin -p admin -V / declare queue name=task_queue auto_delete=false durable=false
(0, 'queue declared')
INFO:root:## declare queue:
rabbitmqadmin -H mbroker -u admin -p admin -V / declare queue name=rpc_queue auto_delete=false durable=false
(0, 'queue declared')
INFO:root:Creating bindings
INFO:root:## declare queue binding
rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=rpc_exchange destination=rpc_queue destination_type=queue routing_key=rpc
(0, 'binding declared')
INFO:root:## declare queue binding
rabbitmqadmin -H mbroker -u admin -p admin -V / declare binding source=task_exchange destination=task_queue destination_type=queue routing_key=task
(0, 'binding declared')
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
WARNING:amqp_server.amqp_server:Connection open failed
ERROR:root:Error: 'AmqpServer' object has no attribute 'connection'
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 60212), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fb56828>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fb56828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fb56828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10fb56828> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
INFO:amqp_server.amqp_server:Message receive 2 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 3 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 4 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 5 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 6 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 7 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 8 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 9 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 10 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 11 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 12 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 13 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 14 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 15 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 16 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 17 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 18 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 19 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 20 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 21 amqp_publisher
INFO:amqp_server.amqp_server:Message receive 22 amqp_publisher
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 60885), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x104c336a0>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x104c336a0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x104c336a0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x104c336a0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: too many values to unpack (expected 2)
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 61031), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e5bb5c0>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e5bb5c0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e5bb5c0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e5bb5c0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Service configuration failed: name 'handler' is not defined
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 61081), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ee860>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ee860> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ee860> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ee860> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 61102), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f34f898>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f34f898> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f34f898> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f34f898> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 61685), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d2a67f0>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d2a67f0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d2a67f0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d2a67f0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 61816), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bd16898>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bd16898> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bd16898> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bd16898> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62036), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x102169748>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x102169748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x102169748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x102169748> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62207), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x105126d68>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x105126d68> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x105126d68> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x105126d68> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62322), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10efe6eb8>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10efe6eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10efe6eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10efe6eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62379), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ec908>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ec908> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ec908> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a6ec908> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62424), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bbb2e80>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bbb2e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bbb2e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10bbb2e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62482), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x103929eb8>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x103929eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x103929eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x103929eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62564), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10be97eb8>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10be97eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10be97eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10be97eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler amqp_server
ERROR:amqp_server.amqp_server:Handler registration failed: __enter__
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62784), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x106436be0>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x106436be0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x106436be0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x106436be0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: 'amqp_server.AmqpRpcProxyHandler'
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: 'amqp_server.AmqpConsumerHandler'
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: 'amqp_server.AmqpProducerHandler'
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 62827), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e4cce48>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e4cce48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e4cce48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10e4cce48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: name 'import_module' is not defined
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: name 'import_module' is not defined
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: name 'import_module' is not defined
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 63169), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10202cda0>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10202cda0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10202cda0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10202cda0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: setup_handler() missing 1 required positional argument: 'config'
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: setup_handler() missing 1 required positional argument: 'config'
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: setup_handler() missing 1 required positional argument: 'config'
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 63209), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d0b1dd8>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d0b1dd8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d0b1dd8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10d0b1dd8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
ERROR:amqp_server.amqp_server:Configuraring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Importing handler module: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:amqp_server.amqp_server:Registration service component
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 63306), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x1029b5eb8>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x1029b5eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x1029b5eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x1029b5eb8> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_server:AMQP RPCProxy Component ID: amqp_rpcproxy
INFO:amqp_server.amqp_server:AMQP Subscriber Component ID: amqp_consumer
INFO:amqp_server.amqp_server:AMQP Publisher Component ID: amqp_producer
INFO:amqp_server.amqp_server:Message receive 1 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: name 'klass' is not defined
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: name 'klass' is not defined
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: name 'klass' is not defined
INFO:amqp_server.amqp_server:Registrating service component
ERROR:amqp_server.amqp_server:Handler registration failed: 'rpc_handler'
INFO:amqp_server.amqp_server:Registrating service component
ERROR:amqp_server.amqp_server:Handler registration failed: 'sub_handler'
INFO:amqp_server.amqp_server:Registrating service component
ERROR:amqp_server.amqp_server:Handler registration failed: 'pub_handler'
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64769), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x108fdbd30>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x108fdbd30> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x108fdbd30> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x108fdbd30> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64821), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10de51c18>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10de51c18> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10de51c18> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10de51c18> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
ERROR:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10de51c18> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 18, in start
    if mode == "RPC":
NameError: name 'mode' is not defined
ERROR:pika.adapters.utils.io_services_utils:protocol.data_received() failed: error=NameError("name 'mode' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64821), raddr=('192.168.1.14', 5672)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 18, in start
    if mode == "RPC":
NameError: name 'mode' is not defined
ERROR:pika.adapters.utils.io_services_utils:_AsyncBaseTransport._consume() failed, aborting connection: error=NameError("name 'mode' is not defined"); sock=<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64821), raddr=('192.168.1.14', 5672)>; Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 18, in start
    if mode == "RPC":
NameError: name 'mode' is not defined
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 18, in start
    if mode == "RPC":
NameError: name 'mode' is not defined
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=NameError("name 'mode' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64821), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64821), raddr=('192.168.1.14', 5672)>
ERROR:pika.adapters.base_connection:connection_lost: StreamLostError: ('Stream connection lost: NameError("name \'mode\' is not defined")',)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=StreamLostError: ('Stream connection lost: NameError("name \'mode\' is not defined")',); pending-error=None
INFO:amqp_server.amqp_server:Channel closed
INFO:pika.connection:Stack terminated due to StreamLostError: ('Stream connection lost: NameError("name \'mode\' is not defined")',)
INFO:amqp_server.amqp_server:Connection closed
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=2; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64821), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64912), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10cc33e10>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10cc33e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10cc33e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10cc33e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
ERROR:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10cc33e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 19, in start
    self.start_rpproxy(channel)
AttributeError: 'AmqpServiceComponent' object has no attribute 'start_rpproxy'
ERROR:pika.adapters.utils.io_services_utils:protocol.data_received() failed: error=AttributeError("'AmqpServiceComponent' object has no attribute 'start_rpproxy'"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64912), raddr=('192.168.1.14', 5672)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 19, in start
    self.start_rpproxy(channel)
AttributeError: 'AmqpServiceComponent' object has no attribute 'start_rpproxy'
ERROR:pika.adapters.utils.io_services_utils:_AsyncBaseTransport._consume() failed, aborting connection: error=AttributeError("'AmqpServiceComponent' object has no attribute 'start_rpproxy'"); sock=<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64912), raddr=('192.168.1.14', 5672)>; Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 19, in start
    self.start_rpproxy(channel)
AttributeError: 'AmqpServiceComponent' object has no attribute 'start_rpproxy'
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 19, in start
    self.start_rpproxy(channel)
AttributeError: 'AmqpServiceComponent' object has no attribute 'start_rpproxy'
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=AttributeError("'AmqpServiceComponent' object has no attribute 'start_rpproxy'"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64912), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64912), raddr=('192.168.1.14', 5672)>
ERROR:pika.adapters.base_connection:connection_lost: StreamLostError: ('Stream connection lost: AttributeError("\'AmqpServiceComponent\' object has no attribute \'start_rpproxy\'")',)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=StreamLostError: ('Stream connection lost: AttributeError("\'AmqpServiceComponent\' object has no attribute \'start_rpproxy\'")',); pending-error=None
INFO:amqp_server.amqp_server:Channel closed
INFO:pika.connection:Stack terminated due to StreamLostError: ('Stream connection lost: AttributeError("\'AmqpServiceComponent\' object has no attribute \'start_rpproxy\'")',)
INFO:amqp_server.amqp_server:Connection closed
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=2; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64912), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
ERROR:amqp_server.amqp_server:Handler registration failed: local variable 'err' referenced before assignment
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64940), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a890e48>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a890e48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a890e48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a890e48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
ERROR:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a890e48> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
ERROR:pika.adapters.utils.io_services_utils:protocol.data_received() failed: error=NameError("name 'component' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64940), raddr=('192.168.1.14', 5672)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
ERROR:pika.adapters.utils.io_services_utils:_AsyncBaseTransport._consume() failed, aborting connection: error=NameError("name 'component' is not defined"); sock=<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64940), raddr=('192.168.1.14', 5672)>; Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=NameError("name 'component' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64940), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64940), raddr=('192.168.1.14', 5672)>
ERROR:pika.adapters.base_connection:connection_lost: StreamLostError: ('Stream connection lost: NameError("name \'component\' is not defined")',)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=StreamLostError: ('Stream connection lost: NameError("name \'component\' is not defined")',); pending-error=None
INFO:amqp_server.amqp_server:Channel closed
INFO:pika.connection:Stack terminated due to StreamLostError: ('Stream connection lost: NameError("name \'component\' is not defined")',)
INFO:amqp_server.amqp_server:Connection closed
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=2; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64940), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64985), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10209be80>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10209be80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10209be80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10209be80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
ERROR:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10209be80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
ERROR:pika.adapters.utils.io_services_utils:protocol.data_received() failed: error=NameError("name 'component' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64985), raddr=('192.168.1.14', 5672)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
ERROR:pika.adapters.utils.io_services_utils:_AsyncBaseTransport._consume() failed, aborting connection: error=NameError("name 'component' is not defined"); sock=<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64985), raddr=('192.168.1.14', 5672)>; Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 44, in start_subscriber
    queue = component['queue_name']
NameError: name 'component' is not defined
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=NameError("name 'component' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64985), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64985), raddr=('192.168.1.14', 5672)>
ERROR:pika.adapters.base_connection:connection_lost: StreamLostError: ('Stream connection lost: NameError("name \'component\' is not defined")',)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=StreamLostError: ('Stream connection lost: NameError("name \'component\' is not defined")',); pending-error=None
INFO:amqp_server.amqp_server:Channel closed
INFO:pika.connection:Stack terminated due to StreamLostError: ('Stream connection lost: NameError("name \'component\' is not defined")',)
INFO:amqp_server.amqp_server:Connection closed
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=2; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 64985), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65037), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f5c6e80>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f5c6e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f5c6e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f5c6e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
ERROR:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10f5c6e80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 45, in start_subscriber
    self.consumer_tag = self.channel.basic_consume(queue, self.handler.handle_message)
AttributeError: 'AmqpServiceComponent' object has no attribute 'channel'
ERROR:pika.adapters.utils.io_services_utils:protocol.data_received() failed: error=AttributeError("'AmqpServiceComponent' object has no attribute 'channel'"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65037), raddr=('192.168.1.14', 5672)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 45, in start_subscriber
    self.consumer_tag = self.channel.basic_consume(queue, self.handler.handle_message)
AttributeError: 'AmqpServiceComponent' object has no attribute 'channel'
ERROR:pika.adapters.utils.io_services_utils:_AsyncBaseTransport._consume() failed, aborting connection: error=AttributeError("'AmqpServiceComponent' object has no attribute 'channel'"); sock=<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65037), raddr=('192.168.1.14', 5672)>; Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 45, in start_subscriber
    self.consumer_tag = self.channel.basic_consume(queue, self.handler.handle_message)
AttributeError: 'AmqpServiceComponent' object has no attribute 'channel'
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 23, in start
    self.start_subscriber(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 45, in start_subscriber
    self.consumer_tag = self.channel.basic_consume(queue, self.handler.handle_message)
AttributeError: 'AmqpServiceComponent' object has no attribute 'channel'
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=AttributeError("'AmqpServiceComponent' object has no attribute 'channel'"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65037), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65037), raddr=('192.168.1.14', 5672)>
ERROR:pika.adapters.base_connection:connection_lost: StreamLostError: ('Stream connection lost: AttributeError("\'AmqpServiceComponent\' object has no attribute \'channel\'")',)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=StreamLostError: ('Stream connection lost: AttributeError("\'AmqpServiceComponent\' object has no attribute \'channel\'")',); pending-error=None
INFO:amqp_server.amqp_server:Channel closed
INFO:pika.connection:Stack terminated due to StreamLostError: ('Stream connection lost: AttributeError("\'AmqpServiceComponent\' object has no attribute \'channel\'")',)
INFO:amqp_server.amqp_server:Connection closed
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=2; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65037), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65102), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10dcbae80>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10dcbae80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10dcbae80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10dcbae80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
ERROR:pika.callback:Calling <bound method Channel._on_openok of <Channel number=1 OPEN conn=<AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10dcbae80> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>>> for "1:Channel.OpenOk" failed
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 22, in start
    self.start_publisher(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 41, in start_publisher
    json.dumps(message, ensure_ascii=False),
NameError: name 'json' is not defined
ERROR:pika.adapters.utils.io_services_utils:protocol.data_received() failed: error=NameError("name 'json' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65102), raddr=('192.168.1.14', 5672)>
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 22, in start
    self.start_publisher(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 41, in start_publisher
    json.dumps(message, ensure_ascii=False),
NameError: name 'json' is not defined
ERROR:pika.adapters.utils.io_services_utils:_AsyncBaseTransport._consume() failed, aborting connection: error=NameError("name 'json' is not defined"); sock=<socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65102), raddr=('192.168.1.14', 5672)>; Caller's stack:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 22, in start
    self.start_publisher(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 41, in start_publisher
    json.dumps(message, ensure_ascii=False),
NameError: name 'json' is not defined
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 1041, in _on_socket_readable
    self._consume()
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/utils/io_services_utils.py", line 801, in _consume
    self._protocol.data_received(data)
  File "/usr/local/lib/python3.7/site-packages/pika/adapters/base_connection.py", line 465, in _proto_data_received
    self._on_data_available(data)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 1949, in _on_data_available
    self._process_frame(frame_value)
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2101, in _process_frame
    if self._process_callbacks(frame_value):
  File "/usr/local/lib/python3.7/site-packages/pika/connection.py", line 2082, in _process_callbacks
    frame_value)  # Args
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 60, in wrapper
    return function(*tuple(args), **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 92, in wrapper
    return function(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/pika/callback.py", line 233, in process
    callback(*args, **keywords)
  File "/usr/local/lib/python3.7/site-packages/pika/channel.py", line 1225, in _on_openok
    self._on_openok_callback(self)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 94, in on_channel_opened
    self.start_components()
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_server.py", line 192, in start_components
    component.start(self.channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 22, in start
    self.start_publisher(channel)
  File "/Users/xavier/Projects/Python/amqp_server/amqp_server/amqp_service_component.py", line 41, in start_publisher
    json.dumps(message, ensure_ascii=False),
NameError: name 'json' is not defined
INFO:pika.adapters.utils.io_services_utils:_AsyncTransportBase._initate_abort(): Initiating abrupt asynchronous transport shutdown: state=1; error=NameError("name 'json' is not defined"); <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65102), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.io_services_utils:Deactivating transport: state=1; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65102), raddr=('192.168.1.14', 5672)>
ERROR:pika.adapters.base_connection:connection_lost: StreamLostError: ('Stream connection lost: NameError("name \'json\' is not defined")',)
INFO:pika.connection:AMQP stack terminated, failed to connect, or aborted: error-arg=StreamLostError: ('Stream connection lost: NameError("name \'json\' is not defined")',); pending-error=None
INFO:amqp_server.amqp_server:Channel closed
INFO:pika.connection:Stack terminated due to StreamLostError: ('Stream connection lost: NameError("name \'json\' is not defined")',)
INFO:amqp_server.amqp_server:Connection closed
INFO:pika.adapters.utils.io_services_utils:Closing transport socket and unlinking: state=2; <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65102), raddr=('192.168.1.14', 5672)>
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65137), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c38cef0>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c38cef0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c38cef0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10c38cef0> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 65380), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a234358>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a234358> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a234358> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x10a234358> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_consumer_handler:Message receive 1 amqp_producer
INFO:amqp_server.amqp_consumer_handler:Message receive 2 amqp_producer
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
INFO:amqp_server.amqp_server:Configuring services
INFO:amqp_server.amqp_server_config:loading configuration
INFO:amqp_server.amqp_server_config:configuration loaded
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpRpcProxyHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpConsumerHandler
INFO:amqp_server.amqp_server:Registering service handler: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Service handler registered: amqp_server.AmqpProducerHandler
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Registrating service component
INFO:amqp_server.amqp_server:Service component registered
INFO:amqp_server.amqp_server:Services configured
INFO:root:AMQP Server: amqp_server release 1.0 is running on localhost
INFO:amqp_server.amqp_server:Starting server
INFO:amqp_server.amqp_server:Configuring connection
INFO:amqp_server.amqp_server:AMQP host urls configured
INFO:amqp_server.amqp_server:Creating a new connection
INFO:pika.adapters.utils.connection_workflow:Pika version 1.0.1 connecting to ('192.168.1.14', 5672)
INFO:pika.adapters.utils.io_services_utils:Socket connected: <socket.socket fd=9, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('192.168.1.14', 49463), raddr=('192.168.1.14', 5672)>
INFO:pika.adapters.utils.connection_workflow:Streaming transport linked up: (<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x107c23e10>, _StreamingProtocolShim: <AsyncioConnection PROTOCOL transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x107c23e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>).
INFO:amqp_server.amqp_server:Connection opened
INFO:amqp_server.amqp_server:Creating a new channel
INFO:pika.adapters.utils.connection_workflow:AMQPConnector - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x107c23e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:pika.adapters.utils.connection_workflow:AMQPConnectionWorkflow - reporting success: <AsyncioConnection OPEN transport=<pika.adapters.utils.io_services_utils._AsyncPlaintextTransport object at 0x107c23e10> params=<ConnectionParameters host=mbroker port=5672 virtual_host=/ ssl=False>>
INFO:amqp_server.amqp_server:Channel opened
INFO:amqp_server.amqp_server:Creating exchanges
INFO:amqp_server.amqp_server:Creating queues
INFO:amqp_server.amqp_server:Creating bindings
INFO:amqp_server.amqp_server:Starting components
INFO:amqp_server.amqp_consumer_handler:Message receive 1 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 2 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 3 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 4 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 5 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 6 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 7 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 8 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 9 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 10 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 11 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 12 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 13 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 14 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 15 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 16 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 17 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 18 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 19 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 20 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 21 amqp_producer
INFO:amqp_server.amqp_consumer_handler:Message receive 22 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 23 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 24 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 25 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 26 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 27 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 28 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 29 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 30 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 31 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 32 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 33 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 34 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 35 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 36 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 37 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 38 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 39 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 40 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 41 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 42 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 43 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 44 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 45 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 46 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 47 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 48 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 49 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 50 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 51 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 52 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 53 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 54 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 55 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 56 amqp_publisher
INFO:amqp_server.amqp_consumer_handler:Message receive 57 amqp_publisher
WARNING:amqp_server.amqp_server:Connection open failed
INFO:amqp_server.amqp_server:Server started
INFO:root:Bye!
